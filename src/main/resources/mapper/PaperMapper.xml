<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.database.paperms.mapper.PaperMapper">

    <insert id="insertPaper" useGeneratedKeys="true" keyProperty="paperId">
        insert into paper(paper_title, paper_meeting, paper_date, paper_summary, paper_link, paper_type,
                          paper_publisher_id, paper_publish_time)
        values (#{paperTitle}, #{paperMeeting}, #{paperDate}, #{paperSummary}, #{paperLink}, #{paperType},
                #{paperPublisherId}, #{paperPublishTime})
    </insert>

    <select id="getPaper" resultType="com.database.paperms.entity.Paper">
        select *
        from paper
        where paper_id = #{paperId}
    </select>

    <select id="getByLink" resultType="com.database.paperms.entity.Paper">
        select *
        from paper
        where paper_link = #{paperLink}
    </select>

    <delete id="deletePaper">
        delete
        from paper
        where paper_id = #{paperId}
    </delete>

    <update id="updatePaper" parameterType="com.database.paperms.entity.Paper">
        update paper
        set paper_title=#{paperTitle},
            paper_meeting=#{paperMeeting},
            paper_date=#{paperDate},
            paper_summary=#{paperSummary},
            paper_link=#{paperLink},
            paper_type=#{paperType},
            paper_publisher_id=#{paperPublisherId},
            paper_publish_time=#{paperPublishTime}
        where paper_id = #{paperId}
    </update>

    <select id="list" resultType="com.database.paperms.entity.Paper">
        select distinct p.paper_id, paper_title, paper_meeting, paper_date, paper_summary, paper_link, paper_type, paper_publisher_id, paper_publish_time from  paper p
        <choose>
            <when test="type == 'title'">
                where paper_title like concat('%',#{cond},'%')
            </when>
            <when test="type == 'direction'">
                inner join paper_rd rd on p.paper_id = rd.paper_id
                inner join research_direction r on rd.rd_id = r.rd_id
                where rd_name like concat('%',#{cond},'%')
            </when>
            <when test="type == 'author'">
                inner join paper_author a on p.paper_id = a.paper_id
                where author_name like concat('%',#{cond},'%')
            </when>
            <when test="type == 'summary'">
                where paper_summary like concat('%',#{cond},'%')
            </when>
        </choose>
       <choose>
           <when test="sort == 0">
               order by paper_date desc
           </when>
           <otherwise>
               order by paper_date asc
           </otherwise>
       </choose>
    </select>

    <select id="getPaperAuthor" resultType="String">
        select author_name from paper_author where paper_id = #{paperId}
    </select>

    <select id="getPaperCitation" resultType="Integer">
        select citation_id from paper_citation where paper_id = #{paperId}
    </select>

    <select id="getPaperRd" resultType="com.database.paperms.entity.ResearchDirection">
        select rd.rd_id,rd_name from paper_rd inner join research_direction rd on paper_rd.rd_id = rd.rd_id where paper_id = #{paperId}
    </select>

    <select id="getPaperAdditionalFile" resultType="com.database.paperms.entity.FileEntity">
        select file_path, file_name,file_size from paper_additional_file where paper_id = #{paperId}
    </select>
    <select id="getSmallPaper" resultType="com.database.paperms.entity.SmallPaper" parameterType="list">
        select paper_id, paper_title from paper
        <where>
            paper_id in
            <foreach item="item" collection="list" separator="," open="(" close=")" index="index">
                #{item}
            </foreach>
        </where>
    </select>
    <select id="advanced_list" resultType="com.database.paperms.entity.Paper">

    </select>
    <select id="getPaperByAccount" resultType="com.database.paperms.entity.Paper">
        select paper_id, paper_title, paper_meeting, paper_date, paper_summary, paper_link, paper_type, paper_publisher_id, paper_publish_time
        from paper inner join user on paper_publisher_id = user_id
        where user_account = #{account}
        <choose>
            <when test="sort == 0">
                order by paper_date desc
            </when>
            <otherwise>
                order by paper_date asc
            </otherwise>
        </choose>
    </select>

</mapper>